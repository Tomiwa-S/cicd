name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }} 
        key: ${{ secrets.EC2_KEY }}
        script: |
          # go to app folder (create if missing)
          cd ~/app || mkdir ~/app && cd ~/app

          # pull latest code
          if [ -d .git ]; then
            git reset --hard
            git pull
          else
            git clone https://github.com/Tomiwa-S/cicd.git .
          fi

          # setup venv if missing
          if [ ! -d "venv" ]; then
            sudo apt update
            sudo apt install python3.12-venv -y
            python3 -m venv venv
          fi
          
          source venv/bin/activate
          
          # install requirements
          pip install --upgrade pip
          pip install flask gunicorn

          # stop old gunicorn processes
          pkill -f gunicorn || true
          sudo pkill -f gunicorn || true
          
          # Wait for processes to fully stop
          sleep 3

          # Method 1: Use port 8000 (no sudo needed)
          echo "Starting gunicorn on port 8000..."
          nohup ./venv/bin/gunicorn -b 0.0.0.0:8000 app:app \
            --access-logfile access.log \
            --error-logfile error.log \
            --log-file app.log \
            --daemon
          
          # Wait and verify
          sleep 3
          
          if pgrep -f "gunicorn.*app:app" > /dev/null; then
            echo "✅ Gunicorn started successfully on port 8000"
            
            # Test the application
            if curl -f http://localhost:8000/ > /dev/null 2>&1; then
              echo "✅ Application is responding"
            else
              echo "❌ Application not responding, checking logs..."
              tail -10 error.log 2>/dev/null || echo "No error log found"
            fi
          else
            echo "❌ Gunicorn failed to start, trying alternative method..."
            
            # Method 2: Use screen session for better process management
            sudo apt install screen -y > /dev/null 2>&1
            screen -dmS flask_app bash -c 'cd ~/app && source venv/bin/activate && venv/bin/gunicorn -b 0.0.0.0:8000 app:app --access-logfile access.log --error-logfile error.log'
            
            sleep 3
            
            if pgrep -f "gunicorn.*app:app" > /dev/null; then
              echo "✅ Gunicorn started in screen session"
            else
              echo "❌ All methods failed, showing logs:"
              tail -20 error.log 2>/dev/null || echo "No error log"
              tail -20 app.log 2>/dev/null || echo "No app log"
              exit 1
            fi
          fi
          
          echo "🎉 Deployment completed! App should be running on port 8000"